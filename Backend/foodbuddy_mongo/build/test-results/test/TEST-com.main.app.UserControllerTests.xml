<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.main.app.UserControllerTests" tests="10" skipped="0" failures="0" errors="0" timestamp="2020-05-09T05:53:33" hostname="DESKTOP" time="1.074">
  <properties/>
  <testcase name="testUserAddFood()" classname="com.main.app.UserControllerTests" time="0.159"/>
  <testcase name="testDayTotal()" classname="com.main.app.UserControllerTests" time="0.075"/>
  <testcase name="testFindFollowing()" classname="com.main.app.UserControllerTests" time="0.067"/>
  <testcase name="testFindAll()" classname="com.main.app.UserControllerTests" time="0.091"/>
  <testcase name="testFindEmailBasic()" classname="com.main.app.UserControllerTests" time="0.067"/>
  <testcase name="testUserUpdatePassword()" classname="com.main.app.UserControllerTests" time="0.119"/>
  <testcase name="testUserUpdate()" classname="com.main.app.UserControllerTests" time="0.127"/>
  <testcase name="testFindEmail()" classname="com.main.app.UserControllerTests" time="0.067"/>
  <testcase name="testAddFollowing()" classname="com.main.app.UserControllerTests" time="0.239"/>
  <testcase name="testAuthUser()" classname="com.main.app.UserControllerTests" time="0.062"/>
  <system-out><![CDATA[2020-05-08 23:53:24.845  INFO 46716 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.main.app.UserControllerTests], using SpringBootContextLoader
2020-05-08 23:53:24.848  INFO 46716 --- [    Test worker] o.s.t.c.support.AbstractContextLoader    : Could not detect default resource locations for test class [com.main.app.UserControllerTests]: no resource found for suffixes {-context.xml, Context.groovy}.
2020-05-08 23:53:24.848  INFO 46716 --- [    Test worker] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [com.main.app.UserControllerTests]: UserControllerTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2020-05-08 23:53:24.862  INFO 46716 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration com.main.app.FoodbuddyApplication for test class com.main.app.UserControllerTests
2020-05-08 23:53:24.867  INFO 46716 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener]
2020-05-08 23:53:24.868  INFO 46716 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@1c1e6328, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4bb1326c, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@3b3a2870, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@6132cf17, org.springframework.test.context.support.DirtiesContextTestExecutionListener@edae73a, org.springframework.test.context.transaction.TransactionalTestExecutionListener@4cba86df, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@26a94e90, org.springframework.test.context.event.EventPublishingTestExecutionListener@51146725, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@8aeb90a, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@103a4abe, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@7c0b5be7, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@ed4260c, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@73cfa835]

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::        (v2.2.6.RELEASE)

2020-05-08 23:53:24.945  INFO 46716 --- [    Test worker] com.main.app.UserControllerTests         : Starting UserControllerTests on Desktop with PID 46716 (started by Amish Cyborg in C:\Users\Amish Cyborg\Documents\FoodBuddy\Backend\foodbuddy_mongo)
2020-05-08 23:53:24.946  INFO 46716 --- [    Test worker] com.main.app.UserControllerTests         : No active profile set, falling back to default profiles: default
2020-05-08 23:53:25.607  INFO 46716 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-05-08 23:53:25.607  INFO 46716 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-05-08 23:53:25.627  INFO 46716 --- [    Test worker] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.main.app.repository.MessageRepository. If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository.
2020-05-08 23:53:25.630  INFO 46716 --- [    Test worker] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.main.app.repository.UserRepository. If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository.
2020-05-08 23:53:25.630  INFO 46716 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 23ms. Found 0 JPA repository interfaces.
2020-05-08 23:53:25.640  INFO 46716 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-05-08 23:53:25.641  INFO 46716 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-05-08 23:53:25.672  INFO 46716 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 31ms. Found 2 MongoDB repository interfaces.
2020-05-08 23:53:26.068  INFO 46716 --- [    Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 0 (http)
2020-05-08 23:53:26.070  INFO 46716 --- [    Test worker] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-05-08 23:53:26.070  INFO 46716 --- [    Test worker] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-05-08 23:53:26.132  INFO 46716 --- [    Test worker] o.a.c.c.C.[Tomcat-1].[localhost].[/]     : Initializing Spring embedded WebApplicationContext
2020-05-08 23:53:26.132  INFO 46716 --- [    Test worker] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1180 ms
2020-05-08 23:53:26.351  INFO 46716 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Starting...
2020-05-08 23:53:26.353  INFO 46716 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Start completed.
2020-05-08 23:53:26.387  INFO 46716 --- [    Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-05-08 23:53:26.403  INFO 46716 --- [    Test worker] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2020-05-08 23:53:26.448  INFO 46716 --- [    Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-08 23:53:26.448  INFO 46716 --- [    Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-05-08 23:53:29.545  INFO 46716 --- [    Test worker] org.mongodb.driver.cluster               : Cluster created with settings {hosts=[127.0.0.1:27017], srvHost=main-xz1r5.mongodb.net, mode=MULTIPLE, requiredClusterType=REPLICA_SET, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500, requiredReplicaSetName='main-shard-0'}
2020-05-08 23:53:30.034  WARN 46716 --- [    Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-05-08 23:53:30.323  INFO 46716 --- [    Test worker] pertySourcedRequestMappingHandlerMapping : Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-05-08 23:53:30.531  INFO 46716 --- [    Test worker] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-05-08 23:53:30.719  WARN 46716 --- [    Test worker] o.s.b.a.m.MustacheAutoConfiguration      : Cannot find template location: classpath:/templates/ (please add some templates, check your Mustache configuration, or set spring.mustache.check-template-location=false)
2020-05-08 23:53:30.901  INFO 46716 --- [    Test worker] o.a.c.c.C.[Tomcat-1].[localhost].[/]     : Initializing Spring TestDispatcherServlet ''
2020-05-08 23:53:30.901  INFO 46716 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2020-05-08 23:53:30.918  INFO 46716 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 17 ms
2020-05-08 23:53:30.945  INFO 46716 --- [    Test worker] d.s.w.p.DocumentationPluginsBootstrapper : Context refreshed
2020-05-08 23:53:30.946  INFO 46716 --- [    Test worker] d.s.w.p.DocumentationPluginsBootstrapper : Found 1 custom documentation plugin(s)
2020-05-08 23:53:30.955  INFO 46716 --- [    Test worker] s.d.s.w.s.ApiListingReferenceScanner     : Scanning for api listing references
2020-05-08 23:53:31.167  INFO 46716 --- [    Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 62798 (http) with context path ''
2020-05-08 23:53:31.168  INFO 46716 --- [    Test worker] com.main.app.UserControllerTests         : Started UserControllerTests in 6.296 seconds (JVM running for 20.175)
2020-05-08 23:53:31.560  INFO 46716 --- [    Test worker] org.mongodb.driver.cluster               : Cluster description not yet available. Waiting for 30000 ms before timing out
2020-05-08 23:53:32.552  INFO 46716 --- [1r5.mongodb.net] org.mongodb.driver.cluster               : Adding discovered server main-shard-00-00-xz1r5.mongodb.net:27017 to client view of cluster
2020-05-08 23:53:32.553  INFO 46716 --- [1r5.mongodb.net] org.mongodb.driver.cluster               : Adding discovered server main-shard-00-01-xz1r5.mongodb.net:27017 to client view of cluster
2020-05-08 23:53:32.554  INFO 46716 --- [1r5.mongodb.net] org.mongodb.driver.cluster               : Adding discovered server main-shard-00-02-xz1r5.mongodb.net:27017 to client view of cluster
2020-05-08 23:53:32.557  INFO 46716 --- [    Test worker] org.mongodb.driver.cluster               : No server chosen by com.mongodb.client.internal.MongoClientDelegate$1@4182a45d from cluster description ClusterDescription{type=REPLICA_SET, connectionMode=MULTIPLE, serverDescriptions=[ServerDescription{address=main-shard-00-00-xz1r5.mongodb.net:27017, type=UNKNOWN, state=CONNECTING}, ServerDescription{address=main-shard-00-01-xz1r5.mongodb.net:27017, type=UNKNOWN, state=CONNECTING}, ServerDescription{address=main-shard-00-02-xz1r5.mongodb.net:27017, type=UNKNOWN, state=CONNECTING}]}. Waiting for 30000 ms before timing out
2020-05-08 23:53:32.813  INFO 46716 --- [ngodb.net:27017] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:5, serverValue:25298}] to main-shard-00-01-xz1r5.mongodb.net:27017
2020-05-08 23:53:32.818  INFO 46716 --- [ngodb.net:27017] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:6, serverValue:19031}] to main-shard-00-02-xz1r5.mongodb.net:27017
2020-05-08 23:53:32.821  INFO 46716 --- [ngodb.net:27017] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:4, serverValue:21618}] to main-shard-00-00-xz1r5.mongodb.net:27017
2020-05-08 23:53:32.870  INFO 46716 --- [ngodb.net:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=main-shard-00-01-xz1r5.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 6]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=56514900, setName='main-shard-0', canonicalAddress=main-shard-00-01-xz1r5.mongodb.net:27017, hosts=[main-shard-00-00-xz1r5.mongodb.net:27017, main-shard-00-02-xz1r5.mongodb.net:27017, main-shard-00-01-xz1r5.mongodb.net:27017], passives=[], arbiters=[], primary='main-shard-00-01-xz1r5.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='US_EAST_1'}]}, electionId=7fffffff0000000000000002, setVersion=2, lastWriteDate=Fri May 08 23:53:32 MDT 2020, lastUpdateTimeNanos=1171995261737900}
2020-05-08 23:53:32.871  INFO 46716 --- [ngodb.net:27017] org.mongodb.driver.cluster               : Setting max election id to 7fffffff0000000000000002 from replica set primary main-shard-00-01-xz1r5.mongodb.net:27017
2020-05-08 23:53:32.871  INFO 46716 --- [ngodb.net:27017] org.mongodb.driver.cluster               : Setting max set version to 2 from replica set primary main-shard-00-01-xz1r5.mongodb.net:27017
2020-05-08 23:53:32.871  INFO 46716 --- [ngodb.net:27017] org.mongodb.driver.cluster               : Discovered replica set primary main-shard-00-01-xz1r5.mongodb.net:27017
2020-05-08 23:53:32.891  INFO 46716 --- [ngodb.net:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=main-shard-00-02-xz1r5.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 6]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=72892600, setName='main-shard-0', canonicalAddress=main-shard-00-02-xz1r5.mongodb.net:27017, hosts=[main-shard-00-00-xz1r5.mongodb.net:27017, main-shard-00-02-xz1r5.mongodb.net:27017, main-shard-00-01-xz1r5.mongodb.net:27017], passives=[], arbiters=[], primary='main-shard-00-01-xz1r5.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='US_EAST_1'}]}, electionId=null, setVersion=2, lastWriteDate=Fri May 08 23:53:32 MDT 2020, lastUpdateTimeNanos=1171995283177500}
2020-05-08 23:53:32.892  INFO 46716 --- [ngodb.net:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=main-shard-00-00-xz1r5.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 6]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=70755600, setName='main-shard-0', canonicalAddress=main-shard-00-00-xz1r5.mongodb.net:27017, hosts=[main-shard-00-00-xz1r5.mongodb.net:27017, main-shard-00-02-xz1r5.mongodb.net:27017, main-shard-00-01-xz1r5.mongodb.net:27017], passives=[], arbiters=[], primary='main-shard-00-01-xz1r5.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='US_EAST_1'}]}, electionId=null, setVersion=2, lastWriteDate=Fri May 08 23:53:32 MDT 2020, lastUpdateTimeNanos=1171995284009100}
2020-05-08 23:53:33.379  INFO 46716 --- [    Test worker] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:7, serverValue:24936}] to main-shard-00-01-xz1r5.mongodb.net:27017

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /user/add
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"58"]
             Body = {"email":"testmockaccount@test.com","password":"password"}
    Session Attrs = {}

Handler:
             Type = com.main.app.controller.UserController
           Method = com.main.app.controller.UserController#addData(UserAddJ)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json"]
     Content type = application/json
             Body = {"response":1,"message":"N/A"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /user/add
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"57"]
             Body = {"email":"testmockfriend@test.com","password":"password"}
    Session Attrs = {}

Handler:
             Type = com.main.app.controller.UserController
           Method = com.main.app.controller.UserController#addData(UserAddJ)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json"]
     Content type = application/json
             Body = {"response":1,"message":"N/A"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /user/day/add/food
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"157"]
             Body = {"email":"testmockaccount@test.com","name":"Sustenance","calories":1000,"sodium":15.0,"carbs":15.0,"protein":15.0,"fat":15.0,"cholesterol":15.0,"amount":2.0}
    Session Attrs = {}

Handler:
             Type = com.main.app.controller.UserController
           Method = com.main.app.controller.UserController#addFoodToDay(FoodAddJ)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json"]
     Content type = application/json
             Body = {"response":1,"message":"N/A"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /user/day/total
       Parameters = {email=[testmockaccount@test.com]}
          Headers = []
             Body = null
    Session Attrs = {}

Handler:
             Type = com.main.app.controller.UserController
           Method = com.main.app.controller.UserController#getTotal(String, String)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json"]
     Content type = application/json
             Body = {"calories":2000,"sodium":30.0,"carbs":30.0,"protein":30.0,"fat":30.0,"cholesterol":30.0}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /user/find/following
       Parameters = {email=[testmockaccount@test.com]}
          Headers = []
             Body = null
    Session Attrs = {}

Handler:
             Type = com.main.app.controller.UserController
           Method = com.main.app.controller.UserController#findFollowing(String)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json"]
     Content type = application/json
             Body = {"content":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /user/find/all
       Parameters = {}
          Headers = []
             Body = null
    Session Attrs = {}

Handler:
             Type = com.main.app.controller.UserController
           Method = com.main.app.controller.UserController#find()

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json"]
     Content type = application/json
             Body = {"users":[{"email":"maw1@iastate.edu","name":null,"age":null,"height":null,"weight":null,"lifestyle":null,"gender":null,"calorieLimit":null,"userType":"default","allergens":[],"following":[],"foods":[],"calendar":{}},{"email":"testmockaccount@test.com","name":null,"age":null,"height":null,"weight":null,"lifestyle":null,"gender":null,"calorieLimit":null,"userType":"default","allergens":[],"following":[],"foods":[{"name":"Sustenance","calories":1000,"sodium":15.0,"carbs":15.0,"protein":15.0,"fat":15.0,"cholesterol":15.0}],"calendar":{"05/08/2020":{"foods":[{"food":"Sustenance","amount":2.0,"timestamp":"05-08-2020 23:53:33.81"}]}}},{"email":"testmockfriend@test.com","name":null,"age":null,"height":null,"weight":null,"lifestyle":null,"gender":null,"calorieLimit":null,"userType":"default","allergens":[],"following":[],"foods":[],"calendar":{}}]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /user/find/email/basic
       Parameters = {email=[testmockaccount@test.com]}
          Headers = []
             Body = null
    Session Attrs = {}

Handler:
             Type = com.main.app.controller.UserController
           Method = com.main.app.controller.UserController#emailFindBasic(String)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json"]
     Content type = application/json
             Body = {"email":"testmockaccount@test.com","name":null,"age":null,"height":null,"weight":null,"lifestyle":null,"gender":null,"calorieLimit":null,"userType":"default","allergens":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /user/update/password
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"58"]
             Body = {"email":"testmockaccount@test.com","password":"password"}
    Session Attrs = {}

Handler:
             Type = com.main.app.controller.UserController
           Method = com.main.app.controller.UserController#updatePassword(UserAddJ)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json"]
     Content type = application/json
             Body = {"response":1,"message":"Password changed"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /user/update
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"174"]
             Body = {"email":"testmockaccount@test.com","name":"Max","age":1,"height":10,"weight":10,"lifestyle":"Active","gender":"Computer","calorieLimit":1,"userType":"tester","allergens":[]}
    Session Attrs = {}

Handler:
             Type = com.main.app.controller.UserController
           Method = com.main.app.controller.UserController#updateUser(UserBasicJ)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json"]
     Content type = application/json
             Body = {"response":1,"message":"N/A"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /user/find/email
       Parameters = {email=[testmockaccount@test.com]}
          Headers = []
             Body = null
    Session Attrs = {}

Handler:
             Type = com.main.app.controller.UserController
           Method = com.main.app.controller.UserController#emailFind(String)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json"]
     Content type = application/json
             Body = {"email":"testmockaccount@test.com","name":"Max","age":1,"height":10,"weight":10,"lifestyle":"Active","gender":"Computer","calorieLimit":1,"userType":"default","allergens":[],"following":[],"foods":[{"name":"Sustenance","calories":1000,"sodium":15.0,"carbs":15.0,"protein":15.0,"fat":15.0,"cholesterol":15.0}],"calendar":{"05/08/2020":{"foods":[{"food":"Sustenance","amount":2.0,"timestamp":"05-08-2020 23:53:33.81"}]}}}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /user/add/following
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"74"]
             Body = {"email":"testmockaccount@test.com","following":"testmockfriend@test.com"}
    Session Attrs = {}

Handler:
             Type = com.main.app.controller.UserController
           Method = com.main.app.controller.UserController#addFriend(FriendJ)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json"]
     Content type = application/json
             Body = {"response":1,"message":"N/A"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /user/auth
       Parameters = {email=[testmockaccount@test.com], password=[password]}
          Headers = []
             Body = null
    Session Attrs = {}

Handler:
             Type = com.main.app.controller.UserController
           Method = com.main.app.controller.UserController#auth(String, String)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json"]
     Content type = application/json
             Body = {"response":1,"message":"N/A"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = DELETE
      Request URI = /user/delete/email
       Parameters = {email=[testmockaccount@test.com]}
          Headers = []
             Body = null
    Session Attrs = {}

Handler:
             Type = com.main.app.controller.UserController
           Method = com.main.app.controller.UserController#delEmail(String)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json"]
     Content type = application/json
             Body = {"response":1,"message":"Data deleted for testmockaccount@test.com"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = DELETE
      Request URI = /user/delete/email
       Parameters = {email=[testmockfriend@test.com]}
          Headers = []
             Body = null
    Session Attrs = {}

Handler:
             Type = com.main.app.controller.UserController
           Method = com.main.app.controller.UserController#delEmail(String)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json"]
     Content type = application/json
             Body = {"response":1,"message":"Data deleted for testmockfriend@test.com"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
