<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.main.app.UserControllerTests" tests="10" skipped="0" failures="0" errors="0" timestamp="2020-04-30T21:34:39" hostname="DESKTOP-2L994SC" time="0.978">
  <properties/>
  <testcase name="testUserAddFood()" classname="com.main.app.UserControllerTests" time="0.137"/>
  <testcase name="testDayTotal()" classname="com.main.app.UserControllerTests" time="0.064"/>
  <testcase name="testFindFollowing()" classname="com.main.app.UserControllerTests" time="0.06"/>
  <testcase name="testFindAll()" classname="com.main.app.UserControllerTests" time="0.144"/>
  <testcase name="testFindEmailBasic()" classname="com.main.app.UserControllerTests" time="0.058"/>
  <testcase name="testUserUpdatePassword()" classname="com.main.app.UserControllerTests" time="0.099"/>
  <testcase name="testUserUpdate()" classname="com.main.app.UserControllerTests" time="0.104"/>
  <testcase name="testFindEmail()" classname="com.main.app.UserControllerTests" time="0.057"/>
  <testcase name="testAddFollowing()" classname="com.main.app.UserControllerTests" time="0.202"/>
  <testcase name="testAuthUser()" classname="com.main.app.UserControllerTests" time="0.049"/>
  <system-out><![CDATA[2020-04-30 16:34:36.300  INFO 20076 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.main.app.UserControllerTests], using SpringBootContextLoader
2020-04-30 16:34:36.300  INFO 20076 --- [    Test worker] o.s.t.c.support.AbstractContextLoader    : Could not detect default resource locations for test class [com.main.app.UserControllerTests]: no resource found for suffixes {-context.xml, Context.groovy}.
2020-04-30 16:34:36.301  INFO 20076 --- [    Test worker] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [com.main.app.UserControllerTests]: UserControllerTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2020-04-30 16:34:36.311  INFO 20076 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration com.main.app.FoodbuddyApplication for test class com.main.app.UserControllerTests
2020-04-30 16:34:36.313  INFO 20076 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener]
2020-04-30 16:34:36.314  INFO 20076 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@779de1e3, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1b620357, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@1832f8fd, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@48752ad5, org.springframework.test.context.support.DirtiesContextTestExecutionListener@50ff48c1, org.springframework.test.context.transaction.TransactionalTestExecutionListener@5b8c8132, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@54766fae, org.springframework.test.context.event.EventPublishingTestExecutionListener@35b4c477, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@1fa72b40, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@201dbc97, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@47f1ac25, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@54755fd0, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@72ae9335]

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::        (v2.2.6.RELEASE)

2020-04-30 16:34:36.364  INFO 20076 --- [    Test worker] com.main.app.UserControllerTests         : Starting UserControllerTests on DESKTOP-2L994SC with PID 20076 (started by samma in C:\Users\samma\Documents\Classes\J1\309\Project Work\hv_3\Backend\foodbuddy_mongo)
2020-04-30 16:34:36.365  INFO 20076 --- [    Test worker] com.main.app.UserControllerTests         : No active profile set, falling back to default profiles: default
2020-04-30 16:34:36.829  INFO 20076 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-04-30 16:34:36.830  INFO 20076 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-04-30 16:34:36.841  INFO 20076 --- [    Test worker] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.main.app.repository.MessageRepository. If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository.
2020-04-30 16:34:36.843  INFO 20076 --- [    Test worker] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.main.app.repository.StatusRepository. If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository.
2020-04-30 16:34:36.846  INFO 20076 --- [    Test worker] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.main.app.repository.UserRepository. If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository.
2020-04-30 16:34:36.846  INFO 20076 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 16ms. Found 0 JPA repository interfaces.
2020-04-30 16:34:36.855  INFO 20076 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-04-30 16:34:36.856  INFO 20076 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-04-30 16:34:36.879  INFO 20076 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 23ms. Found 3 MongoDB repository interfaces.
2020-04-30 16:34:37.135  INFO 20076 --- [    Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 0 (http)
2020-04-30 16:34:37.136  INFO 20076 --- [    Test worker] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-04-30 16:34:37.136  INFO 20076 --- [    Test worker] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-04-30 16:34:37.177  INFO 20076 --- [    Test worker] o.a.c.c.C.[Tomcat-1].[localhost].[/]     : Initializing Spring embedded WebApplicationContext
2020-04-30 16:34:37.177  INFO 20076 --- [    Test worker] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 807 ms
2020-04-30 16:34:37.286  INFO 20076 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Starting...
2020-04-30 16:34:37.287  INFO 20076 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Start completed.
2020-04-30 16:34:37.307  INFO 20076 --- [    Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-04-30 16:34:37.316  INFO 20076 --- [    Test worker] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2020-04-30 16:34:37.340  INFO 20076 --- [    Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-04-30 16:34:37.341  INFO 20076 --- [    Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-04-30 16:34:37.390  INFO 20076 --- [    Test worker] org.mongodb.driver.cluster               : Cluster created with settings {hosts=[coms-309-hv-3.cs.iastate.edu:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-30 16:34:37.390  INFO 20076 --- [    Test worker] org.mongodb.driver.cluster               : Adding discovered server coms-309-hv-3.cs.iastate.edu:27017 to client view of cluster
2020-04-30 16:34:37.530  INFO 20076 --- [state.edu:27017] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:2, serverValue:1503}] to coms-309-hv-3.cs.iastate.edu:27017
2020-04-30 16:34:37.574  INFO 20076 --- [state.edu:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=coms-309-hv-3.cs.iastate.edu:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 3]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=43934199}
2020-04-30 16:34:37.574  INFO 20076 --- [state.edu:27017] org.mongodb.driver.cluster               : Discovered cluster type of STANDALONE
2020-04-30 16:34:37.771  WARN 20076 --- [    Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-04-30 16:34:37.945  INFO 20076 --- [    Test worker] pertySourcedRequestMappingHandlerMapping : Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-04-30 16:34:38.071  INFO 20076 --- [    Test worker] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-04-30 16:34:38.177  WARN 20076 --- [    Test worker] o.s.b.a.m.MustacheAutoConfiguration      : Cannot find template location: classpath:/templates/ (please add some templates, check your Mustache configuration, or set spring.mustache.check-template-location=false)
2020-04-30 16:34:38.280  INFO 20076 --- [    Test worker] o.a.c.c.C.[Tomcat-1].[localhost].[/]     : Initializing Spring TestDispatcherServlet ''
2020-04-30 16:34:38.281  INFO 20076 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2020-04-30 16:34:38.296  INFO 20076 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 15 ms
2020-04-30 16:34:38.314  INFO 20076 --- [    Test worker] d.s.w.p.DocumentationPluginsBootstrapper : Context refreshed
2020-04-30 16:34:38.315  INFO 20076 --- [    Test worker] d.s.w.p.DocumentationPluginsBootstrapper : Found 1 custom documentation plugin(s)
2020-04-30 16:34:38.320  INFO 20076 --- [    Test worker] s.d.s.w.s.ApiListingReferenceScanner     : Scanning for api listing references
2020-04-30 16:34:38.430  INFO 20076 --- [    Test worker] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: findUsingGET_1
2020-04-30 16:34:38.504  INFO 20076 --- [    Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 4509 (http) with context path ''
2020-04-30 16:34:38.505  INFO 20076 --- [    Test worker] com.main.app.UserControllerTests         : Started UserControllerTests in 2.189 seconds (JVM running for 11.004)
2020-04-30 16:34:39.258  INFO 20076 --- [    Test worker] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:3, serverValue:1504}] to coms-309-hv-3.cs.iastate.edu:27017

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /user/add
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"58"]
             Body = {"email":"testmockaccount@test.com","password":"password"}
    Session Attrs = {}

Handler:
             Type = com.main.app.controller.UserController
           Method = com.main.app.controller.UserController#addData(UserAddJ)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json"]
     Content type = application/json
             Body = {"response":1,"message":"N/A"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /user/add
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"57"]
             Body = {"email":"testmockfriend@test.com","password":"password"}
    Session Attrs = {}

Handler:
             Type = com.main.app.controller.UserController
           Method = com.main.app.controller.UserController#addData(UserAddJ)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json"]
     Content type = application/json
             Body = {"response":1,"message":"N/A"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /user/day/add/food
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"157"]
             Body = {"email":"testmockaccount@test.com","name":"Sustenance","calories":1000,"sodium":15.0,"carbs":15.0,"protein":15.0,"fat":15.0,"cholesterol":15.0,"amount":2.0}
    Session Attrs = {}

Handler:
             Type = com.main.app.controller.UserController
           Method = com.main.app.controller.UserController#addFoodToDay(FoodAddJ)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json"]
     Content type = application/json
             Body = {"response":1,"message":"N/A"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /user/day/total
       Parameters = {email=[testmockaccount@test.com]}
          Headers = []
             Body = null
    Session Attrs = {}

Handler:
             Type = com.main.app.controller.UserController
           Method = com.main.app.controller.UserController#getTotal(String, String)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json"]
     Content type = application/json
             Body = {"calories":2000,"sodium":30.0,"carbs":30.0,"protein":30.0,"fat":30.0,"cholesterol":30.0}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /user/find/following
       Parameters = {email=[testmockaccount@test.com]}
          Headers = []
             Body = null
    Session Attrs = {}

Handler:
             Type = com.main.app.controller.UserController
           Method = com.main.app.controller.UserController#findFollowing(String)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json"]
     Content type = application/json
             Body = {"content":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /user/find/all
       Parameters = {}
          Headers = []
             Body = null
    Session Attrs = {}

Handler:
             Type = com.main.app.controller.UserController
           Method = com.main.app.controller.UserController#find()

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json"]
     Content type = application/json
             Body = {"users":[{"email":"test@iastate.edu","name":"Max Wilson","age":14,"height":84,"weight":10,"lifestyle":"Hyperactive","gender":"Man","calorieLimit":420,"userType":"default","allergens":["peanut","water","gluten","meat"],"following":["tyler@iastate.edu"],"foods":[{"name":"Pie","calories":600,"sodium":50.0,"carbs":40.0,"protein":35.0,"fat":25.0,"cholesterol":10.0}],"calendar":{"03/05/2020":{"foods":[{"food":"Pie","amount":2.0,"timestamp":"03-05-2020 21:37:07.87"}]},"03/10/2020":{"foods":[{"food":"Pie","amount":2.0,"timestamp":"03-10-2020 17:11:47.57"},{"food":"Pie","amount":2.0,"timestamp":"03-10-2020 17:11:50.41"},{"food":"Pie","amount":2.0,"timestamp":"03-10-2020 17:11:51.27"}]}}},{"email":"maw1@iastate.edu","name":null,"age":null,"height":null,"weight":null,"lifestyle":null,"gender":null,"calorieLimit":null,"userType":"default","allergens":[],"following":[],"foods":[],"calendar":{}},{"email":"tdj1@iastate.edu","name":null,"age":null,"height":null,"weight":null,"lifestyle":null,"gender":null,"calorieLimit":null,"userType":"default","allergens":[],"following":[],"foods":[],"calendar":{}},{"email":"test@test.test","name":"TEST","age":21,"height":80,"weight":150,"lifestyle":"Moderate","gender":"male","calorieLimit":3226,"userType":"default","allergens":["milk","egg"],"following":[],"foods":[],"calendar":{}},{"email":"teste@test.test","name":null,"age":null,"height":null,"weight":null,"lifestyle":null,"gender":null,"calorieLimit":null,"userType":"default","allergens":[],"following":[],"foods":[],"calendar":{}},{"email":"test2@test.test","name":null,"age":null,"height":null,"weight":null,"lifestyle":null,"gender":null,"calorieLimit":null,"userType":"default","allergens":[],"following":[],"foods":[],"calendar":{}},{"email":"test3@test.test","name":null,"age":null,"height":null,"weight":null,"lifestyle":null,"gender":null,"calorieLimit":null,"userType":"default","allergens":[],"following":[],"foods":[],"calendar":{}},{"email":"test4@test.test","name":null,"age":null,"height":null,"weight":null,"lifestyle":null,"gender":null,"calorieLimit":null,"userType":"default","allergens":[],"following":[],"foods":[],"calendar":{}},{"email":"maxv1@iastate.edu","name":"Max Van de Wille","age":22,"height":77,"weight":160,"lifestyle":"Inactive","gender":"Male","calorieLimit":3883,"userType":"default","allergens":["Tree Nuts","Eggs"],"following":["maxv8@iastate.edu"],"foods":[{"name":"Raisinets","calories":190,"sodium":15.0,"carbs":32.0,"protein":2.0,"fat":8.0,"cholesterol":5.0},{"name":"Raisinets","calories":190,"sodium":15.0,"carbs":32.0,"protein":2.0,"fat":8.0,"cholesterol":5.0},{"name":"dusisiakka","calories":190,"sodium":190.0,"carbs":190.0,"protein":190.0,"fat":190.0,"cholesterol":190.0},{"name":"raisin","calories":12,"sodium":12.0,"carbs":12.0,"protein":12.0,"fat":12.0,"cholesterol":12.0},{"name":"raisin","calories":12,"sodium":12.0,"carbs":12.0,"protein":12.0,"fat":12.0,"cholesterol":12.0},{"name":"raisin","calories":12,"sodium":12.0,"carbs":12.0,"protein":12.0,"fat":12.0,"cholesterol":12.0},{"name":"raisin","calories":12,"sodium":12.0,"carbs":12.0,"protein":12.0,"fat":12.0,"cholesterol":12.0},{"name":"raisin","calories":12,"sodium":12.0,"carbs":12.0,"protein":12.0,"fat":12.0,"cholesterol":12.0},{"name":"raisin","calories":12,"sodium":12.0,"carbs":12.0,"protein":12.0,"fat":12.0,"cholesterol":12.0},{"name":"raisin","calories":12,"sodium":12.0,"carbs":12.0,"protein":12.0,"fat":12.0,"cholesterol":12.0},{"name":"raisin","calories":12,"sodium":12.0,"carbs":12.0,"protein":12.0,"fat":12.0,"cholesterol":12.0},{"name":"raisin","calories":12,"sodium":12.0,"carbs":12.0,"protein":12.0,"fat":12.0,"cholesterol":12.0},{"name":"raisin","calories":12,"sodium":12.0,"carbs":12.0,"protein":12.0,"fat":12.0,"cholesterol":12.0},{"name":"raisin","calories":12,"sodium":12.0,"carbs":12.0,"protein":12.0,"fat":12.0,"cholesterol":12.0},{"name":"raisin","calories":12,"sodium":12.0,"carbs":12.0,"protein":12.0,"fat":12.0,"cholesterol":12.0},{"name":"raisinets","calories":190,"sodium":15.0,"carbs":32.0,"protein":2.0,"fat":8.0,"cholesterol":5.0},{"name":"dumb shit","calories":161,"sodium":151.0,"carbs":1616.0,"protein":1717.0,"fat":181718.0,"cholesterol":1818.0},{"name":"jimmy John","calories":410,"sodium":0.29,"carbs":56.0,"protein":5.0,"fat":19.0,"cholesterol":0.05},{"name":"Yogurt","calories":200,"sodium":0.004,"carbs":5.0,"protein":6.0,"fat":2.0,"cholesterol":0.02},{"name":"yogurt","calories":80,"sodium":0.08,"carbs":15.0,"protein":5.0,"fat":0.0,"cholesterol":0.005},{"name":"Yogurt","calories":80,"sodium":85.0,"carbs":15.0,"protein":5.0,"fat":0.0,"cholesterol":5.0},{"name":"raisinets","calories":100,"sodium":15.0,"carbs":5.0,"protein":30.0,"fat":20.0,"cholesterol":13.0},{"name":"chips","calories":150,"sodium":160.0,"carbs":16.0,"protein":1.0,"fat":10.0,"cholesterol":0.0}],"calendar":{"03/10/2020":{"foods":[{"food":"Raisinets","amount":1.5,"timestamp":"03-10-2020 04:52:49.81"},{"food":"Raisinets","amount":1.5,"timestamp":"03-10-2020 04:54:06.80"},{"food":"dusisiakka","amount":1.0,"timestamp":"03-10-2020 05:00:54.48"},{"food":"raisin","amount":12.0,"timestamp":"03-10-2020 05:06:45.16"},{"food":"raisin","amount":12.0,"timestamp":"03-10-2020 05:06:46.14"},{"food":"raisin","amount":12.0,"timestamp":"03-10-2020 05:06:47.36"},{"food":"raisin","amount":12.0,"timestamp":"03-10-2020 05:06:50.75"},{"food":"raisin","amount":12.0,"timestamp":"03-10-2020 05:06:51.58"},{"food":"raisin","amount":12.0,"timestamp":"03-10-2020 05:07:01.09"},{"food":"raisin","amount":12.0,"timestamp":"03-10-2020 05:07:01.58"},{"food":"raisin","amount":12.0,"timestamp":"03-10-2020 05:07:25.94"},{"food":"raisin","amount":12.0,"timestamp":"03-10-2020 05:08:07.30"},{"food":"raisin","amount":12.0,"timestamp":"03-10-2020 05:08:07.35"},{"food":"raisin","amount":12.0,"timestamp":"03-10-2020 05:08:26.82"},{"food":"raisin","amount":12.0,"timestamp":"03-10-2020 05:08:28.27"},{"food":"raisinets","amount":1.0,"timestamp":"03-10-2020 05:17:25.68"},{"food":"dumb shit","amount":2.0,"timestamp":"03-10-2020 05:18:29.97"}]},"03/12/2020":{"foods":[{"food":"jimmy John","amount":1.0,"timestamp":"03-12-2020 21:43:46.26"}]},"03/13/2020":{"foods":[{"food":"Yogurt","amount":1.0,"timestamp":"03-13-2020 15:33:51.18"}]},"04/10/2020":{"foods":[{"food":"yogurt","amount":1.0,"timestamp":"04-10-2020 17:14:04.39"}]},"04/14/2020":{"foods":[{"food":"Yogurt","amount":2.0,"timestamp":"04-14-2020 23:30:01.80"}]},"04/30/2020":{"foods":[{"food":"raisinets","amount":1.0,"timestamp":"04-30-2020 20:50:23.58"},{"food":"chips","amount":1.0,"timestamp":"04-30-2020 21:26:00.97"}]}}},{"email":"test5@test.test","name":null,"age":null,"height":null,"weight":null,"lifestyle":null,"gender":null,"calorieLimit":null,"userType":"default","allergens":[],"following":[],"foods":[],"calendar":{}},{"email":"teset6@test.test","name":null,"age":null,"height":null,"weight":null,"lifestyle":null,"gender":null,"calorieLimit":null,"userType":"default","allergens":[],"following":[],"foods":[],"calendar":{}},{"email":"test7@test.test","name":null,"age":null,"height":null,"weight":null,"lifestyle":null,"gender":null,"calorieLimit":null,"userType":"default","allergens":[],"following":[],"foods":[],"calendar":{}},{"email":"test8@test.test","name":null,"age":null,"height":null,"weight":null,"lifestyle":null,"gender":null,"calorieLimit":null,"userType":"default","allergens":[],"following":[],"foods":[],"calendar":{}},{"email":"test10@test.test","name":"Test10","age":21,"height":123,"weight":234,"lifestyle":"1","gender":"Male","calorieLimit":null,"userType":"default","allergens":[],"following":[],"foods":[],"calendar":{}},{"email":"test11@test.test","name":"test11","age":21,"height":85,"weight":125,"lifestyle":"3","gender":"Male","calorieLimit":null,"userType":"default","allergens":[],"following":[],"foods":[],"calendar":{}},{"email":"test12@test.test","name":null,"age":null,"height":null,"weight":null,"lifestyle":null,"gender":null,"calorieLimit":null,"userType":"default","allergens":[],"following":[],"foods":[],"calendar":{}},{"email":"test13@test.test","name":null,"age":null,"height":null,"weight":null,"lifestyle":null,"gender":null,"calorieLimit":null,"userType":"default","allergens":[],"following":[],"foods":[],"calendar":{}},{"email":"test14@test.test","name":null,"age":null,"height":null,"weight":null,"lifestyle":null,"gender":null,"calorieLimit":null,"userType":"default","allergens":[],"following":[],"foods":[],"calendar":{}},{"email":"test15@test.test","name":"test15","age":23,"height":85,"weight":200,"lifestyle":"Active","gender":"Male","calorieLimit":null,"userType":"default","allergens":[],"following":[],"foods":[],"calendar":{}},{"email":"test16@test.test","name":"test16","age":45,"height":70,"weight":280,"lifestyle":"Somewhat active","gender":"Male","calorieLimit":null,"userType":"default","allergens":[],"following":[],"foods":[],"calendar":{}},{"email":"test17@test.test","name":"test17","age":45,"height":69,"weight":420,"lifestyle":"Sedentary","gender":"Male","calorieLimit":null,"userType":"default","allergens":[],"following":[],"foods":[],"calendar":{}},{"email":"test18@test.test","name":"test18","age":34,"height":69,"weight":220,"lifestyle":"Somewhat active","gender":"Male","calorieLimit":2073,"userType":"default","allergens":["Fish"],"following":[],"foods":[],"calendar":{}},{"email":"tyler@iastate.com","name":null,"age":null,"height":null,"weight":null,"lifestyle":null,"gender":null,"calorieLimit":null,"userType":"default","allergens":[],"following":[],"foods":[],"calendar":{}},{"email":"tyler@iastate.edu","name":null,"age":null,"height":null,"weight":null,"lifestyle":null,"gender":null,"calorieLimit":null,"userType":"default","allergens":[],"following":[],"foods":[],"calendar":{}},{"email":"test@test123.test","name":"testy","age":24,"height":72,"weight":100,"lifestyle":"Moderate","gender":"Male","calorieLimit":3046,"userType":"default","allergens":["Milk","Eggs","Tree Nuts"],"following":[],"foods":[{"name":"Trail mix","calories":210,"sodium":0.09,"carbs":20.0,"protein":5.0,"fat":13.0,"cholesterol":0.0}],"calendar":{"03/10/2020":{"foods":[{"food":"Trail mix","amount":1.0,"timestamp":"03-10-2020 18:30:58.75"}]}}},{"email":"gmail@gmail.com","name":"Tyler","age":21,"height":60,"weight":70,"lifestyle":"Moderate","gender":"Male","calorieLimit":1764,"userType":"default","allergens":["Tree Nuts","Garlic"],"following":[],"foods":[{"name":"spicy garlic","calories":25,"sodium":0.54,"carbs":2.0,"protein":0.0,"fat":2.0,"cholesterol":0.005}],"calendar":{"03/19/2020":{"foods":[{"food":"spicy garlic","amount":2.0,"timestamp":"03-19-2020 01:58:37.18"}]}}},{"email":"maxv8@iastate.edu","name":"owiefj","age":31,"height":12,"weight":12,"lifestyle":"Active","gender":"Male","calorieLimit":162,"userType":"default","allergens":["Milk","Eggs","Tree Nuts"],"following":[],"foods":[],"calendar":{}},{"email":"demo@test.test","name":"test","age":21,"height":80,"weight":150,"lifestyle":"Somewhat active","gender":"Male","calorieLimit":1855,"userType":"default","allergens":[],"following":[],"foods":[],"calendar":{}},{"email":"maxv9@iastate.edu","name":"wiuefghiwuehf","age":21,"height":14,"weight":56,"lifestyle":"Moderate","gender":"Male","calorieLimit":707,"userType":"default","allergens":["Milk","Eggs","Soy","Wheat"],"following":[],"foods":[{"name":"Example food","calories":400,"sodium":123.0,"carbs":123.0,"protein":123.0,"fat":123.0,"cholesterol":123.0}],"calendar":{"03/12/2020":{"foods":[{"food":"Example food","amount":1.0,"timestamp":"03-12-2020 21:21:14.58"}]}}},{"email":"maxv10@iastate.edu","name":"Max V","age":21,"height":72,"weight":165,"lifestyle":"Moderate","gender":"Male","calorieLimit":2931,"userType":"default","allergens":["Milk","Wheat"],"following":[],"foods":[{"name":"yogurt","calories":80,"sodium":0.08,"carbs":15.0,"protein":5.0,"fat":0.0,"cholesterol":0.005},{"name":"Yogurt","calories":80,"sodium":80.0,"carbs":15.0,"protein":5.0,"fat":0.0,"cholesterol":5.0}],"calendar":{"04/10/2020":{"foods":[{"food":"yogurt","amount":2.0,"timestamp":"04-10-2020 17:22:50.65"},{"food":"Yogurt","amount":1.5,"timestamp":"04-10-2020 17:25:21.84"}]}}},{"email":"maxv11@iastate.edu","name":"Max v","age":21,"height":72,"weight":165,"lifestyle":"Active","gender":"Male","calorieLimit":3593,"userType":"default","allergens":["Wheat","Fish","Shellfish"],"following":[],"foods":[{"name":"Yogurt","calories":80,"sodium":80.0,"carbs":15.0,"protein":5.0,"fat":0.0,"cholesterol":5.0}],"calendar":{"04/10/2020":{"foods":[{"food":"Yogurt","amount":1.5,"timestamp":"04-10-2020 17:29:40.38"}]}}},{"email":"maxv12@iastate.edu","name":"Max V","age":21,"height":72,"weight":165,"lifestyle":"Moderate","gender":"Male","calorieLimit":2269,"userType":"default","allergens":["Eggs","Shellfish","Fish"],"following":[],"foods":[{"name":"Yogurt","calories":80,"sodium":80.0,"carbs":15.0,"protein":5.0,"fat":0.0,"cholesterol":5.0}],"calendar":{"04/10/2020":{"foods":[{"food":"Yogurt","amount":2.0,"timestamp":"04-10-2020 17:32:20.69"}]}}},{"email":"whatever@whatever.whatever","name":"pqiorgiqwrg","age":21,"height":20,"weight":20,"lifestyle":"Active","gender":"Male","calorieLimit":583,"userType":"default","allergens":["Milk"],"following":[],"foods":[],"calendar":{}},{"email":"maxw@gmail.com","name":"Max","age":21,"height":74,"weight":175,"lifestyle":"Moderate","gender":"Male","calorieLimit":3069,"userType":"default","allergens":[],"following":[],"foods":[{"name":"raisin","calories":1,"sodium":1.0,"carbs":1.0,"protein":1.0,"fat":1.0,"cholesterol":1.0},{"name":"raisin","calories":1,"sodium":1.0,"carbs":1.0,"protein":1.0,"fat":1.0,"cholesterol":1.0},{"name":"raisin","calories":1,"sodium":1.0,"carbs":1.0,"protein":1.0,"fat":1.0,"cholesterol":1.0},{"name":"raisin","calories":1,"sodium":1.0,"carbs":1.0,"protein":1.0,"fat":1.0,"cholesterol":1.0},{"name":"raisin","calories":1,"sodium":1.0,"carbs":1.0,"protein":1.0,"fat":1.0,"cholesterol":1.0},{"name":"raisin","calories":1,"sodium":1.0,"carbs":1.0,"protein":1.0,"fat":1.0,"cholesterol":1.0},{"name":"raisin","calories":1,"sodium":1.0,"carbs":1.0,"protein":1.0,"fat":1.0,"cholesterol":1.0},{"name":"raisin","calories":1,"sodium":1.0,"carbs":1.0,"protein":1.0,"fat":1.0,"cholesterol":1.0},{"name":"raisin","calories":1,"sodium":1.0,"carbs":1.0,"protein":1.0,"fat":1.0,"cholesterol":1.0},{"name":"raisin","calories":1,"sodium":1.0,"carbs":1.0,"protein":1.0,"fat":1.0,"cholesterol":1.0},{"name":"test","calories":2,"sodium":2.0,"carbs":6.0,"protein":2.0,"fat":5.0,"cholesterol":5.0},{"name":"test","calories":2,"sodium":2.0,"carbs":6.0,"protein":2.0,"fat":5.0,"cholesterol":5.0},{"name":"test","calories":2,"sodium":2.0,"carbs":6.0,"protein":2.0,"fat":5.0,"cholesterol":5.0},{"name":"test","calories":2,"sodium":2.0,"carbs":6.0,"protein":2.0,"fat":5.0,"cholesterol":5.0},{"name":"test","calories":2,"sodium":2.0,"carbs":6.0,"protein":2.0,"fat":5.0,"cholesterol":5.0}],"calendar":{"04/30/2020":{"foods":[{"food":"raisin","amount":1.0,"timestamp":"04-30-2020 20:41:08.89"},{"food":"raisin","amount":1.0,"timestamp":"04-30-2020 20:41:12.23"},{"food":"raisin","amount":1.0,"timestamp":"04-30-2020 20:41:12.41"},{"food":"raisin","amount":1.0,"timestamp":"04-30-2020 20:41:12.54"},{"food":"raisin","amount":1.0,"timestamp":"04-30-2020 20:41:12.63"},{"food":"raisin","amount":1.0,"timestamp":"04-30-2020 20:41:12.70"},{"food":"raisin","amount":1.0,"timestamp":"04-30-2020 20:41:12.76"},{"food":"raisin","amount":1.0,"timestamp":"04-30-2020 20:41:12.89"},{"food":"raisin","amount":1.0,"timestamp":"04-30-2020 20:41:13.01"},{"food":"raisin","amount":1.0,"timestamp":"04-30-2020 20:41:17.19"},{"food":"test","amount":10.0,"timestamp":"04-30-2020 20:51:16.74"},{"food":"test","amount":10.0,"timestamp":"04-30-2020 20:51:21.72"},{"food":"test","amount":10.0,"timestamp":"04-30-2020 20:51:22.27"},{"food":"test","amount":10.0,"timestamp":"04-30-2020 20:51:31.75"},{"food":"test","amount":10.0,"timestamp":"04-30-2020 20:51:31.83"}]}}},{"email":"testmockaccount@test.com","name":null,"age":null,"height":null,"weight":null,"lifestyle":null,"gender":null,"calorieLimit":null,"userType":"default","allergens":[],"following":[],"foods":[{"name":"Sustenance","calories":1000,"sodium":15.0,"carbs":15.0,"protein":15.0,"fat":15.0,"cholesterol":15.0}],"calendar":{"04/30/2020":{"foods":[{"food":"Sustenance","amount":2.0,"timestamp":"04-30-2020 16:34:39.61"}]}}},{"email":"testmockfriend@test.com","name":null,"age":null,"height":null,"weight":null,"lifestyle":null,"gender":null,"calorieLimit":null,"userType":"default","allergens":[],"following":[],"foods":[],"calendar":{}}]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /user/find/email/basic
       Parameters = {email=[testmockaccount@test.com]}
          Headers = []
             Body = null
    Session Attrs = {}

Handler:
             Type = com.main.app.controller.UserController
           Method = com.main.app.controller.UserController#emailFindBasic(String)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json"]
     Content type = application/json
             Body = {"email":"testmockaccount@test.com","name":null,"age":null,"height":null,"weight":null,"lifestyle":null,"gender":null,"calorieLimit":null,"userType":"default","allergens":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /user/update/password
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"58"]
             Body = {"email":"testmockaccount@test.com","password":"password"}
    Session Attrs = {}

Handler:
             Type = com.main.app.controller.UserController
           Method = com.main.app.controller.UserController#updatePassword(UserAddJ)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json"]
     Content type = application/json
             Body = {"response":1,"message":"Password changed"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /user/update
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"174"]
             Body = {"email":"testmockaccount@test.com","name":"Max","age":1,"height":10,"weight":10,"lifestyle":"Active","gender":"Computer","calorieLimit":1,"userType":"tester","allergens":[]}
    Session Attrs = {}

Handler:
             Type = com.main.app.controller.UserController
           Method = com.main.app.controller.UserController#updateUser(UserBasicJ)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json"]
     Content type = application/json
             Body = {"response":1,"message":"N/A"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /user/find/email
       Parameters = {email=[testmockaccount@test.com]}
          Headers = []
             Body = null
    Session Attrs = {}

Handler:
             Type = com.main.app.controller.UserController
           Method = com.main.app.controller.UserController#emailFind(String)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json"]
     Content type = application/json
             Body = {"email":"testmockaccount@test.com","name":"Max","age":1,"height":10,"weight":10,"lifestyle":"Active","gender":"Computer","calorieLimit":1,"userType":"default","allergens":[],"following":[],"foods":[{"name":"Sustenance","calories":1000,"sodium":15.0,"carbs":15.0,"protein":15.0,"fat":15.0,"cholesterol":15.0}],"calendar":{"04/30/2020":{"foods":[{"food":"Sustenance","amount":2.0,"timestamp":"04-30-2020 16:34:39.61"}]}}}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /user/add/following
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"74"]
             Body = {"email":"testmockaccount@test.com","following":"testmockfriend@test.com"}
    Session Attrs = {}

Handler:
             Type = com.main.app.controller.UserController
           Method = com.main.app.controller.UserController#addFriend(FriendJ)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json"]
     Content type = application/json
             Body = {"response":1,"message":"N/A"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /user/auth
       Parameters = {email=[testmockaccount@test.com], password=[password]}
          Headers = []
             Body = null
    Session Attrs = {}

Handler:
             Type = com.main.app.controller.UserController
           Method = com.main.app.controller.UserController#auth(String, String)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json"]
     Content type = application/json
             Body = {"response":1,"message":"N/A"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = DELETE
      Request URI = /user/delete/email
       Parameters = {email=[testmockaccount@test.com]}
          Headers = []
             Body = null
    Session Attrs = {}

Handler:
             Type = com.main.app.controller.UserController
           Method = com.main.app.controller.UserController#delEmail(String)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json"]
     Content type = application/json
             Body = {"response":1,"message":"Data deleted for testmockaccount@test.com"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = DELETE
      Request URI = /user/delete/email
       Parameters = {email=[testmockfriend@test.com]}
          Headers = []
             Body = null
    Session Attrs = {}

Handler:
             Type = com.main.app.controller.UserController
           Method = com.main.app.controller.UserController#delEmail(String)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json"]
     Content type = application/json
             Body = {"response":1,"message":"Data deleted for testmockfriend@test.com"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
